{"version":3,"sources":["../src/app.js"],"names":["require","express","expressLayouts","path","favicon","logger","cookieParser","bodyParser","connectMongodb","session","config","auth","api","page","MongoStore","app","set","join","__dirname","use","json","urlencoded","extended","cookieName","static","secret","sessionSecret","store","url","mongodbUrl","resave","saveUninitialized","authUser","req","res","next","err","Error","status","locals","message","error","get","format","send","toString","html","render","default","errorDetails","module","exports"],"mappings":"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","file":"app.js","sourcesContent":["// 在初始化app.js最开头就连接数据库\r\nrequire('./models/init');\r\nvar express = require('express');\r\nvar expressLayouts = require('express-ejs-layouts');\r\nvar path = require('path');\r\nvar favicon = require('serve-favicon');\r\nvar logger = require('morgan');\r\nvar cookieParser = require('cookie-parser');\r\nvar bodyParser = require('body-parser');\r\nvar connectMongodb = require('connect-mongo');\r\nvar session = require('express-session');\r\n\r\nvar config = require('./config');\r\nvar auth = require('./middlewares/auth');\r\nvar api = require('./route.api');\r\nvar page = require('./route.page');\r\n\r\nvar MongoStore = new connectMongodb(session);\r\nvar app = express();\r\n\r\n// view engine setup\r\napp.set('views', path.join(__dirname, 'views'));\r\napp.set('view engine', 'ejs');\r\napp.use(expressLayouts);\r\n\r\n// uncomment after placing your favicon in /public\r\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\r\napp.use(logger('dev'));\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\napp.use(cookieParser(config.cookieName));\r\napp.use(express.static(path.join(__dirname, 'public')));\r\n\r\napp.use(\r\n  session({\r\n    secret: config.sessionSecret,\r\n    store: new MongoStore({\r\n      url: config.mongodbUrl\r\n    }),\r\n    resave: true,\r\n    saveUninitialized: true\r\n  })\r\n);\r\n\r\napp.use(auth.authUser);\r\n\r\napp.use('/', page);\r\napp.use('/api/v1', api);\r\n\r\n// catch 404 and forward to error handler\r\napp.use(function(req, res, next) {\r\n  var err = new Error('Not Found');\r\n  err.status = 404;\r\n  next(err);\r\n});\r\n\r\n// error handler\r\napp.use(function(err, req, res, next) {\r\n  // set locals, only providing error in development\r\n  res.locals.message = err.message || err;\r\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\r\n\r\n  // the error response\r\n  res.status(err.status || 500).format({\r\n    json() {\r\n      res.send({error: err.toString()});\r\n    },\r\n\r\n    html() {\r\n      res.render('error');\r\n    },\r\n\r\n    default() {\r\n      const message = `${errorDetails}`;\r\n      res.send(`500 Internal server error:\\n${err.toString()}`);\r\n    },\r\n  });\r\n});\r\n\r\nmodule.exports = app;\r\n"]}