{"version":3,"sources":["../src/app.js"],"names":["auth","require","MongoStore","app","set","join","__dirname","use","json","urlencoded","extended","cookieName","static","authUser","req","res","next","err","Error","status","locals","message","error","get","format","send","toString","html","render","default","errorDetails"],"mappings":";;;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;IAAYA,I;;AACZ;;;;AACA;;;;;;;;AAfA;AACAC,QAAQ,eAAR;;;AAgBA,IAAMC,aAAa,oDAAnB;AACA,IAAMC,MAAM,wBAAZ;;AAEA;AACAA,IAAIC,GAAJ,CAAQ,OAAR,EAAiB,eAAKC,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAjB;AACAH,IAAIC,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AACAD,IAAII,GAAJ;;AAEA;AACA;AACAJ,IAAII,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAJ,IAAII,GAAJ,CAAQ,qBAAWC,IAAX,EAAR;AACAL,IAAII,GAAJ,CAAQ,qBAAWE,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACAP,IAAII,GAAJ,CAAQ,4BAAa,iBAAOI,UAApB,CAAR;AACAR,IAAII,GAAJ,CAAQ,kBAAQK,MAAR,CAAe,eAAKP,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;;AAEAH,IAAII,GAAJ,CAAQP,KAAKa,QAAb;;AAEAV,IAAII,GAAJ,CAAQ,GAAR;AACAJ,IAAII,GAAJ,CAAQ,SAAR;;AAEA;AACAJ,IAAII,GAAJ,CAAQ,UAASO,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC/B,MAAIC,MAAM,IAAIC,KAAJ,CAAU,WAAV,CAAV;AACAD,MAAIE,MAAJ,GAAa,GAAb;AACAH,OAAKC,GAAL;AACD,CAJD;;AAMA;AACAd,IAAII,GAAJ,CAAQ,UAASU,GAAT,EAAcH,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AACpC;AACAD,MAAIK,MAAJ,CAAWC,OAAX,GAAqBJ,IAAII,OAAJ,IAAeJ,GAApC;AACAF,MAAIK,MAAJ,CAAWE,KAAX,GAAmBR,IAAIX,GAAJ,CAAQoB,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCN,GAAvC,GAA6C,EAAhE;;AAEA;AACAF,MAAII,MAAJ,CAAWF,IAAIE,MAAJ,IAAc,GAAzB,EAA8BK,MAA9B,CAAqC;AACnChB,QADmC,kBAC5B;AACLO,UAAIU,IAAJ,CAAS,EAACH,OAAOL,IAAIS,QAAJ,EAAR,EAAT;AACD,KAHkC;AAKnCC,QALmC,kBAK5B;AACLZ,UAAIa,MAAJ,CAAW,OAAX;AACD,KAPkC;AASnCC,WATmC,sBASzB;AACR,UAAMR,eAAaS,YAAnB;AACAf,UAAIU,IAAJ,kCAAwCR,IAAIS,QAAJ,EAAxC;AACD;AAZkC,GAArC;AAcD,CApBD;;kBAsBevB,G","file":"app.js","sourcesContent":["// 在初始化app.js最开头就连接数据库\r\nrequire('./models/init');\r\nimport express from 'express';\r\nimport expressLayouts from 'express-ejs-layouts';\r\nimport path from 'path';\r\nimport favicon from 'serve-favicon';\r\nimport logger from 'morgan';\r\nimport cookieParser from 'cookie-parser';\r\nimport bodyParser from 'body-parser';\r\nimport connectMongodb from 'connect-mongo';\r\nimport session from 'express-session';\r\n\r\nimport config from './config';\r\nimport * as auth from './middlewares/auth';\r\nimport api from './route.api';\r\nimport page from './route.page';\r\n\r\nconst MongoStore = new connectMongodb(session);\r\nconst app = express();\r\n\r\n// view engine setup\r\napp.set('views', path.join(__dirname, 'views'));\r\napp.set('view engine', 'ejs');\r\napp.use(expressLayouts);\r\n\r\n// uncomment after placing your favicon in /public\r\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\r\napp.use(logger('dev'));\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\napp.use(cookieParser(config.cookieName));\r\napp.use(express.static(path.join(__dirname, 'public')));\r\n\r\napp.use(auth.authUser);\r\n\r\napp.use('/', page);\r\napp.use('/api/v1', api);\r\n\r\n// catch 404 and forward to error handler\r\napp.use(function(req, res, next) {\r\n  var err = new Error('Not Found');\r\n  err.status = 404;\r\n  next(err);\r\n});\r\n\r\n// error handler\r\napp.use(function(err, req, res, next) {\r\n  // set locals, only providing error in development\r\n  res.locals.message = err.message || err;\r\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\r\n\r\n  // the error response\r\n  res.status(err.status || 500).format({\r\n    json() {\r\n      res.send({error: err.toString()});\r\n    },\r\n\r\n    html() {\r\n      res.render('error');\r\n    },\r\n\r\n    default() {\r\n      const message = `${errorDetails}`;\r\n      res.send(`500 Internal server error:\\n${err.toString()}`);\r\n    },\r\n  });\r\n});\r\n\r\nexport default app;\r\n"]}