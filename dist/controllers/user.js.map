{"version":3,"sources":["../../src/controllers/user.js"],"names":["signup","req","res","next","body","name","pass","rePass","Error","user","hashSync","save","then","end","catch","signin","findOne","exec","isOk","compareSync","token","encode","_id","isAdmin","loginname","admin","exp","add","valueOf","jwtSecret","opts","path","maxAge","signed","httpOnly","cookie","cookieName","json","more","send"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEO,IAAMA,0BAAS,SAATA,MAAS,CAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAAA,kBACfF,IAAIG,IADW;AAAA,MACtCC,IADsC,aACtCA,IADsC;AAAA,MAChCC,IADgC,aAChCA,IADgC;AAAA,MAC1BC,MAD0B,aAC1BA,MAD0B;;;AAG9C,MAAID,SAASC,MAAb,EAAqB;AACnB,WAAOJ,KAAK,IAAIK,KAAJ,CAAU,QAAV,CAAL,CAAP;AACD;;AAED,MAAMC,OAAO,oBAAb;AACAA,OAAKJ,IAAL,GAAYA,IAAZ;AACAI,OAAKH,IAAL,GAAY,iBAAOI,QAAP,CAAgBJ,IAAhB,EAAsB,EAAtB,CAAZ;AACAG,OAAKE,IAAL,GACGC,IADH,CACQ,YAAM;AACVV,QAAIW,GAAJ;AACD,GAHH,EAIGC,KAJH,CAISX,IAJT;AAKD,CAfM;;AAiBA,IAAMY,0BAAS,SAATA,MAAS,CAAUd,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAAA,mBACvBF,IAAIG,IADmB;AAAA,MACtCC,IADsC,cACtCA,IADsC;AAAA,MAChCC,IADgC,cAChCA,IADgC;;;AAG9C,iBAAUU,OAAV,CAAkB,EAAEX,UAAF,EAAlB,EAA2BY,IAA3B,GACGL,IADH,CACQ,gBAAQ;AACZ,QAAI,CAACH,IAAL,EAAW;AACT,YAAM,IAAID,KAAJ,CAAU,OAAV,CAAN;AACD,KAFD,MAEO;AACL,UAAMU,OAAO,iBAAOC,WAAP,CAAmBb,IAAnB,EAAyBG,KAAKH,IAA9B,CAAb;AACA,UAAI,CAACY,IAAL,EAAW;AACT,eAAOf,KAAK,IAAIK,KAAJ,CAAU,MAAV,CAAL,CAAP;AACD;;AAED,UAAMY,QAAQ,oBAAIC,MAAJ,CACZ;AACEC,aAAKb,KAAKa,GADZ;AAEEjB,cAAMI,KAAKJ,IAFb;AAGEkB,iBAASd,KAAKe,SAAL,KAAmB,iBAAOC,KAHrC;AAIEC,aAAK,wBACFC,GADE,CACE,MADF,EACU,EADV,EAEFC,OAFE;AAJP,OADY,EASZ,iBAAOC,SATK,CAAd;;AAYA,UAAMC,OAAO;AACXC,cAAM,GADK;AAEXC,gBAAQ,wBACLL,GADK,CACD,MADC,EACO,EADP,EAELC,OAFK,EAFG;AAKXK,gBAAQ,IALG;AAMXC,kBAAU;AANC,OAAb;;AASAhC,UAAIiC,MAAJ,CAAW,iBAAOC,UAAlB,EAA8BhB,KAA9B,EAAqCU,IAArC;AACA5B,UAAImC,IAAJ,CAAS,EAAEjB,YAAF,EAAT;AACD;AACF,GAlCH,EAmCGN,KAnCH,CAmCSX,IAnCT;AAoCD,CAvCM;;AAyCA,IAAMmC,sBAAO,SAAPA,IAAO,CAAUrC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC5CD,MAAIqC,IAAJ,CAAS,yBAAT;AACD,CAFM","file":"user.js","sourcesContent":["import bcrypt from 'bcrypt'\r\nimport PostModel from '../models/post'\r\nimport UserModel from '../models/user'\r\nimport config from '../config'\r\nimport jwt from 'jwt-simple'\r\nimport moment from 'moment'\r\n\r\nexport const signup = function (req, res, next) {\r\n  const { name, pass, rePass } = req.body\r\n\r\n  if (pass !== rePass) {\r\n    return next(new Error('两次密码不对'))\r\n  }\r\n\r\n  const user = new UserModel()\r\n  user.name = name\r\n  user.pass = bcrypt.hashSync(pass, 10)\r\n  user.save()\r\n    .then(() => {\r\n      res.end()\r\n    })\r\n    .catch(next)\r\n}\r\n\r\nexport const signin = function (req, res, next) {\r\n  const { name, pass } = req.body\r\n\r\n  UserModel.findOne({ name}).exec()\r\n    .then(user => {\r\n      if (!user) {\r\n        throw new Error('找不到用户')\r\n      } else {\r\n        const isOk = bcrypt.compareSync(pass, user.pass)\r\n        if (!isOk) {\r\n          return next(new Error('密码不对'))\r\n        }\r\n\r\n        const token = jwt.encode(\r\n          {\r\n            _id: user._id,\r\n            name: user.name,\r\n            isAdmin: user.loginname === config.admin,\r\n            exp: moment()\r\n              .add('days', 30)\r\n              .valueOf()\r\n          },\r\n          config.jwtSecret\r\n        )\r\n\r\n        const opts = {\r\n          path: '/',\r\n          maxAge: moment()\r\n            .add('days', 30)\r\n            .valueOf(),\r\n          signed: true,\r\n          httpOnly: true\r\n        }\r\n\r\n        res.cookie(config.cookieName, token, opts)\r\n        res.json({ token})\r\n      }\r\n    })\r\n    .catch(next)\r\n}\r\n\r\nexport const more = function (req, res, next) {\r\n  res.send('respond with a resource')\r\n}\r\n"]}