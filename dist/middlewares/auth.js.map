{"version":3,"sources":["../../src/middlewares/auth.js"],"names":["config","require","UserModel","authUser","req","res","next","locals","currentUser","session","user","authToken","signedCookies","cookieName","findOne","_id","err","loginname","admin","isAdmin","adminRequired","Error","status","module","exports"],"mappings":";;AAAA,IAAIA,SAASC,QAAQ,WAAR,CAAb;AACA,IAAIC,YAAYD,QAAQ,gBAAR,CAAhB;;AAEA,SAASE,QAAT,CAAkBC,GAAlB,EAAuBC,GAAvB,EAA4BC,IAA5B,EAAkC;AAChCD,MAAIE,MAAJ,CAAWC,WAAX,GAAyB,IAAzB;;AAEA,MAAIJ,IAAIK,OAAJ,IAAeL,IAAIK,OAAJ,CAAYC,IAA/B,EAAqC;AACnC,QAAMA,OAAON,IAAIK,OAAJ,CAAYC,IAAzB;AACAL,QAAIE,MAAJ,CAAWC,WAAX,GAAyBE,IAAzB;AACAJ;AACD,GAJD,MAIO;AACL,QAAMK,YAAYP,IAAIQ,aAAJ,CAAkBZ,OAAOa,UAAzB,KAAwC,EAA1D;;AAEA,QAAIF,SAAJ,EAAe;AACbT,gBAAUY,OAAV,CAAkB,EAAEC,KAAKJ,SAAP,EAAlB,EAAsC,UAASK,GAAT,EAAcN,IAAd,EAAoB;AACxD,YAAIM,GAAJ,EAAS;AACPV;AACD,SAFD,MAEO;AACL,cAAII,KAAKO,SAAL,KAAmBjB,OAAOkB,KAA9B,EAAqC;AACnCR,iBAAKS,OAAL,GAAe,IAAf;AACD;;AAEDf,cAAIK,OAAJ,CAAYC,IAAZ,GAAmBA,IAAnB;AACAL,cAAIE,MAAJ,CAAWC,WAAX,GAAyBE,IAAzB;AACAJ;AACD;AACF,OAZD;AAaD,KAdD,MAcO;AACLA;AACD;AACF;AACF;;AAED,SAASc,aAAT,CAAuBhB,GAAvB,EAA4BC,GAA5B,EAAiCC,IAAjC,EAAuC;AACrC,MAAI,CAACF,IAAIK,OAAL,IAAgB,CAACL,IAAIK,OAAJ,CAAYC,IAAjC,EAAuC;AACrC,QAAIM,MAAM,IAAIK,KAAJ,CAAU,MAAV,CAAV;AACAL,QAAIM,MAAJ,GAAa,GAAb;AACAhB,SAAKU,GAAL;AACA;AACD;;AAED,MAAI,CAACZ,IAAIK,OAAJ,CAAYC,IAAZ,CAAiBS,OAAtB,EAA+B;AAC7B,QAAIH,OAAM,IAAIK,KAAJ,CAAU,SAAV,CAAV;AACAL,SAAIM,MAAJ,GAAa,GAAb;AACAhB,SAAKU,IAAL;AACA;AACD;;AAEDV;AACD;;AAEDiB,OAAOC,OAAP,GAAiB,EAAErB,kBAAF,EAAYiB,4BAAZ,EAAjB","file":"auth.js","sourcesContent":["var config = require('../config');\r\nvar UserModel = require('../models/user');\r\n\r\nfunction authUser(req, res, next) {\r\n  res.locals.currentUser = null;\r\n\r\n  if (req.session && req.session.user) {\r\n    const user = req.session.user;\r\n    res.locals.currentUser = user;\r\n    next();\r\n  } else {\r\n    const authToken = req.signedCookies[config.cookieName] || '';\r\n\r\n    if (authToken) {\r\n      UserModel.findOne({ _id: authToken }, function(err, user) {\r\n        if (err) {\r\n          next();\r\n        } else {\r\n          if (user.loginname === config.admin) {\r\n            user.isAdmin = true;\r\n          }\r\n\r\n          req.session.user = user;\r\n          res.locals.currentUser = user;\r\n          next();\r\n        }\r\n      });\r\n    } else {\r\n      next();\r\n    }\r\n  }\r\n}\r\n\r\nfunction adminRequired(req, res, next) {\r\n  if (!req.session || !req.session.user) {\r\n    let err = new Error('需要登录');\r\n    err.status = 403;\r\n    next(err);\r\n    return;\r\n  }\r\n\r\n  if (!req.session.user.isAdmin) {\r\n    let err = new Error('需要管理员权限');\r\n    err.status = 403;\r\n    next(err);\r\n    return;\r\n  }\r\n\r\n  next();\r\n}\r\n\r\nmodule.exports = { authUser, adminRequired };\r\n"]}