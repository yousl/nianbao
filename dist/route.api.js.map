{"version":3,"sources":["../src/route.api.js"],"names":["bcrypt","require","express","router","Router","PostModel","UserModel","config","auth","get","req","res","next","send","find","err","posts","json","postsList","id","params","findOne","_id","post","adminRequired","title","body","content","authorId","locals","currentUser","save","doc","patch","findOneAndUpdate","end","name","pass","rePass","Error","user","hashSync","isOk","compareSync","authToken","opts","path","maxAge","signed","httpOnly","cookie","cookieName","module","exports"],"mappings":"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","file":"route.api.js","sourcesContent":["var bcrypt = require('bcrypt');\r\nvar express = require('express');\r\nvar router = express.Router();\r\nvar PostModel = require('./models/post');\r\nvar UserModel = require('./models/user');\r\nvar config = require('./config');\r\nvar auth = require('./middlewares/auth');\r\n\r\n/* GET users lists. */\r\nrouter.get('/users', function(req, res, next) {\r\n  res.send('respond with a resource');\r\n});\r\n\r\n/* GET posts lists */\r\nrouter.get('/posts', function(req, res, next) {\r\n  PostModel.find({}, {}, function(err, posts) {\r\n    if (err) {\r\n      next(err);\r\n    } else {\r\n      res.json({ postsList: posts });\r\n    }\r\n  });\r\n});\r\n\r\n/* GET one post */\r\nrouter.get('/posts/:id', function(req, res, next) {\r\n  var id = req.params.id;\r\n\r\n  PostModel.findOne({ _id: id }, function(err, post) {\r\n    if (err) {\r\n      next(err);\r\n    } else {\r\n      res.json({ post });\r\n    }\r\n  });\r\n});\r\n\r\n/* POST create post */\r\nrouter.post('/posts', auth.adminRequired, function (req, res, next) {\r\n  var title = req.body.title;\r\n  var content = req.body.content;\r\n\r\n  var post = new PostModel();\r\n  post.title = title;\r\n  post.content = content;\r\n  post.authorId = res.locals.currentUser._id;\r\n  post.save(function(err, doc) {\r\n    if (err) {\r\n      next(err);\r\n    } else {\r\n      res.json({ post: doc });\r\n    }\r\n  });\r\n});\r\n\r\n/* PATCH edit post */\r\nrouter.patch('/posts/:id', auth.adminRequired, function(req, res, next) {\r\n  var id = req.params.id;\r\n  var title = req.body.title;\r\n  var content = req.body.content;\r\n\r\n  PostModel.findOneAndUpdate({ _id: id }, { title, content }, function(err) {\r\n    if (err) {\r\n      next(err);\r\n    } else {\r\n      res.end();\r\n    }\r\n  });\r\n});\r\n\r\n/* POST signup user */\r\nrouter.post('/signup', function(req, res, next) {\r\n  var name = req.body.name;\r\n  var pass = req.body.pass;\r\n  var rePass = req.body.rePass;\r\n\r\n  if (pass !== rePass) {\r\n    return next(new Error('两次密码不对'));\r\n  }\r\n\r\n  var user = new UserModel();\r\n  user.name = name;\r\n  user.pass = bcrypt.hashSync(pass, 10);\r\n  user.save(function(err) {\r\n    if (err) {\r\n      next(err);\r\n    } else {\r\n      res.end();\r\n    }\r\n  });\r\n});\r\n\r\n/* POST signin user */\r\nrouter.post('/signin', function(req, res, next) {\r\n  var name = req.body.name || '';\r\n  var pass = req.body.pass || '';\r\n\r\n  UserModel.findOne({ name }, function(err, user) {\r\n    if (err || !user) {\r\n      return next(new Error('找不到用户'));\r\n    } else {\r\n      var isOk = bcrypt.compareSync(pass, user.pass);\r\n      if (!isOk) {\r\n        return next(new Error('密码不对'));\r\n      }\r\n\r\n      var authToken = user._id;\r\n      var opts = {\r\n        path: '/',\r\n        maxAge: 1000 * 60 * 60 * 24 * 30, // cookie 有效期30天\r\n        signed: true,\r\n        httpOnly: true\r\n      };\r\n\r\n      res.cookie(config.cookieName, authToken, opts);\r\n      res.end();\r\n    }\r\n  });\r\n});\r\n\r\nmodule.exports = router;\r\n"]}